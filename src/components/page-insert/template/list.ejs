/** @title <%= list.pageTitle %> */
import { useEffect, useState } from 'react'
import { Button, Table, TableColumnsType, Modal, message } from 'antd'
import { SearchQuery, PageTitle } from '@/components/common'
import { accountListDemo, deleteItemDemo } from '@/actions/actions/demo'
import { IaccountListItem, IaccountListParams } from '@/actions/types/demo'

export default function Index(props: Project.IPageProps) {
  const { location, navigate } = props
  const [listData, setListData] = useState<IaccountListItem[]>([])
  const [loading, setLoading] = useState(false)
  const [pagination, setPagination] = useState({
    pageSize: 20,
    pageNo: 1,
    total: 0,
  })

  useEffect(() => {
    searchData({
      pageNo: 1,
      ...location.query,
    })
  }, [])

  const searchData = async (po) => {
    setLoading(true)
    const res = await accountListDemo({ ...pagination, ...po })
    setListData(res.data.list)
    setLoading(false)
    setPagination({
      total: res.data.totalCount,
      pageNo: res.data.pageNo,
      pageSize: res.data.pageSize,
    })
  }

  const handlePage = (pageNo, pageSize) => {
    searchData({
      pageNo,
      pageSize,
    })
  }

  const handleSearch = (params) => {
    searchData({
      pageNo: 1,
      ...params,
    })
  }
  <% if (list.table.includes("wordScale")) { %>
  const showWordDetail = (val, name) => {
    Modal.success({
      title: `查看${name}`,
      content: val
    })
  }
  <% } %>
  <% if (list.table.includes('delete')) { %>
  const handleDelete = (record) => {
    Modal.confirm({
      title: "确认删除",
      content: "删除后数据不可恢复！",
      onOk: async () => {
        await deleteItemDemo({ id: record.id })
        message.success('操作成功')
        searchData({})
      }
    })
  }
  <% } %>
  const columns: TableColumnsType<IaccountListItem> = [
    {
      title: '用户名称',
      dataIndex: 'name',
    },
    <% if (list.table.includes('wordScale')) { %> {
      title: '备注',
      dataIndex: 'remark',
      render: (val) => {
        if (val.length < 8) {
          return val
        } else return <span onClick={() => showWordDetail(val, '备注')}>{val.substring(0, 8)}...</span>
      },
    }, <% } %>
    {
      title: '创建时间',
      dataIndex: 'createTime',
    },
    {
      title: '操作',
      width: 200,
      fixed: 'right',
      render: (re) => (
        <div>
          <% if (list.table.includes('delete')) { %> <span onClick={() => handleDelete(re)}>
            删除
          </span> <% } %>
          <span onClick={() => navigate(`<%= target.replace('/src/pages','') %>/<%= addDir %>/detail?id=${re.id}`)}>
            查看详情
          </span>
          <span
            onClick={() => navigate(`<%= target.replace('/src/pages','') %>/<%= addDir %>/operate?id=${re.id}`)}
          >
            编辑
          </span>
        </div>
      ),
    },
  ]

  return (
    <div className="pages-account-index">
      <PageTitle title="<%= list.pageTitle %>" />
      <SearchQuery<IaccountListParams>
        className="search-box"
        fetchData={handleSearch}
        searchData={pagination}
        searchConfig={[
          <% if (list.search.includes('input')) { %> {
            key: 'name',
            label: '用户名称',
            type: 'input',
          },  <% } %>
          <% if (list.search.includes('select')) { %>  {
            key: 'select',
            label: '下拉搜索',
            type: 'select',
            options: [{ value: '选项1', key: 'key1' }],
          }, <% } %>
          <% if (list.search.includes('timePicker')) { %> {
            key: 'time',
            label: '日期选择',
            type: 'timePicker',
            format: 'YYYY-MM-DD HH:mm:ss',
          }, <% } %>
          <% if (list.search.includes('monthPicker')) { %> {
            key: 'month',
            label: '月份选择',
            type: 'monthPicker',
            format: 'YYYY-MM',
          },  <% } %>
           <% if (list.search.includes('rangePicker')) { %> {
            key: ['creatTime', 'creatTimeStart', 'creatTimeEnd'],
            label: '创建时间',
            type: 'rangePicker',
          }, <% } %>
          <% if (list.search.includes('treeSelect')) { %> {
            key: 'treeSelect',
            label: '树选择',
            type: 'treeSelect',
            props: {
              treeData: [],
            },
          }, <% } %>
          <% if (list.search.includes('cascader')) { %> {
            key: 'cascader',
            label: '树选择',
            type: 'cascader',
            props: {
              options: [],
            },
          }, <% } %>
        ]}
      />
      <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>
        <Button onClick={() => navigate('<%= target.replace('/src/pages','') %>/<% addDir %>/operate')}>
          新增
        </Button>
      </div>
      <Table
        style={{ marginTop: 10 }}
        dataSource={listData}
        columns={columns}
        loading={loading}
        pagination={{
          total: pagination.total,
          pageSize: pagination.pageSize,
          current: pagination.pageNo || 1,
          onChange: handlePage,
          showSizeChanger: true,
        }}
        rowKey="id"
        scroll={{ x: 'max-content' }}
      />
    </div>
  )
}
